@model BillingWeb.tblProduct

@{
    ViewBag.Title = "Edit";
}


<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
<script src="/Scripts/product.js"></script>

<h2>Product</h2>
@using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ProductID)
    @Html.HiddenFor(model => model.IsActive)
    @Html.HiddenFor(model => model.CreatedBy)
    @Html.HiddenFor(model => model.CreatedOn)
    <table class="table">
        <tr>

            <td>
                Product Name
            </td>
            <td>Product Category</td>
            <td>Sub Category</td>
            <td>Make</td>
            <td>Unit</td>
        </tr>
        <tr>
            <td>
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </td>
            <td>
                @Html.DropDownList("ProductCategoryID", ViewData["ProductCategoryID"] as List<SelectListItem>, "Select", new {@class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProductCategoryID, "", new { @class = "text-danger" })
                
            </td>
            <td>
            
                @Html.DropDownList("ProductSubCategoryID", ViewData["ProductSubCategoryID"] as List<SelectListItem>, "Select", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProductSubCategoryID, "", new { @class = "text-danger" })
            </td>
            <td>@Html.EditorFor(model => model.Make, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Make, "", new { @class = "text-danger" })
            </td>
            <td>
                @Html.DropDownList("UnitID", ViewData["UnitID"] as List<SelectListItem>, "Select", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UnitID, "", new { @class = "text-danger" })
            </td>
        </tr>
        <tr>
            <td>Size</td>
            <td>RatePerUnit</td>
            <td>Discount</td>
            <td>Tax</td>
            <td>SGST</td>
        </tr>
        <tr>

            <td>
                @Html.DropDownList("SizeID", ViewData["SizeID"] as List<SelectListItem>, "Select", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SizeID, "", new { @class = "text-danger" })
            </td>
            <td>@Html.EditorFor(model => model.RatePerUnit, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RatePerUnit, "", new { @class = "text-danger" })
            </td>
            <td>@Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
            </td>
            <td>
                @Html.DropDownList("TaxID", ViewData["TaxID"] as List<SelectListItem>, "Select", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TaxID, "", new { @class = "text-danger" })
            </td>
            <td>@Html.EditorFor(model => model.SGST, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SGST, "", new { @class = "text-danger" })
            </td>
        </tr>
        <tr>
            <td>CGST</td>
            <td>ProductDescription</td>
            <td colspan="3">Remark</td>
        </tr>
        <tr>
            <td>@Html.EditorFor(model => model.CGST, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CGST, "", new { @class = "text-danger" })
            </td>
            <td>@Html.EditorFor(model => model.ProductDescription, new { htmlAttributes = new { @class = "form-control" } })

                @Html.ValidationMessageFor(model => model.ProductDescription, "", new { @class = "text-danger" })
            </td>
            <td colspan="3">@Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
            </td>
        </tr>

    </table>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Add" class="btn btn-primary" />
            <input type="button" onclick="location.href='@Url.Action("Index", "Products")'" value="Cancel" class="btn btn-primary" />
        </div>
    </div>
}

